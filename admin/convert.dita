<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "urn:pubid:zenoss.com:doctypes:dita:dtd:task" "task.dtd">
<task id="taskid">
  <title>Converting a single-host deployment to multi-host</title>
  <taskbody>
    <context>You may add hosts to a single-host deployment by
    following the steps in this procedure.</context>
    <steps>
      <step>
        <cmd>Install <ph keyref="nm-cc"/> on resource pool hosts.</cmd>
      </step>
      <step>
        <cmd>Log in to the <ph keyref="nm-cc"/> web interface, and then stop all applications.</cmd>
      </step>
      <step>
        <cmd>Log in to the master host.</cmd>
        <choices>
          <choice>For Ubuntu hosts, log in as a user with <codeph>sudo</codeph> and <codeph>docker</codeph> privileges.</choice>
          <choice>For RHEL or CentOS hosts, log in as <codeph>root</codeph>.</choice>
        </choices>
      </step>
      <step>
        <cmd>Stop the <cmdname>serviced</cmdname> daemon.</cmd>
        <choices>
          <choice>Ubuntu: <userinput>sudo stop serviced</userinput></choice>
          <choice>RHEL/CentOS: <userinput>systemctl stop serviced</userinput></choice>
        </choices>
      </step>
      <step>
        <cmd>Configure the master host for multi-host deployment.</cmd>
        <info>
          <p>To enable a multi-host deployment, uncomment and change the following variables.</p>
        <dl>
          <dlentry>
            <dt>SERVICED_REGISTRY</dt>
            <dd>Determines whether <cmdname>serviced</cmdname> uses a local registry to store 
              Docker images. Set the value to 1, true.</dd>
          </dlentry>
          <dlentry>
            <dt>SERVICED_AGENT</dt>
            <dd>Determines whether a <cmdname>serviced</cmdname> instance performs agent tasks.
                Agents run application services scheduled for the resource pool to which they
                belong. Set the value to 1, true.</dd>
          </dlentry>
          <dlentry>
            <dt>SERVICED_MASTER</dt>
            <dd>Determines whether a <cmdname>serviced</cmdname> instance performs master tasks. The
                master runs the application services scheduler and other internal services,
                including the server for the <ph keyref="nm-cc"/> web interface. A
                  <cmdname>serviced</cmdname> instance may be configured as both an agent and a
                master. Set the value to 1, true.</dd>
          </dlentry>
        </dl>
        <p>The following commands make the required edits to <filepath>/etc/default/serviced</filepath>.</p>
        </info>
        <stepxmp><codeblock>EXT=&#36;(date +"&#37;j-&#37;H&#37;M&#37;S")
sudo sed -i.&#36;&#123;EXT&#125; -e 's&#124;&#94;&#35;&#91;&#94;S&#93;&#42;\(SERVICED_REGISTRY=\).&#124;\11&#124;' \
  -e 's&#124;&#94;&#35;&#91;&#94;S&#93;&#42;\(SERVICED_AGENT=\).&#124;\11&#124;' \
  -e 's&#124;&#94;&#35;&#91;&#94;S&#93;&#42;\(SERVICED_MASTER=\).&#124;\11&#124;' \
  /etc/default/serviced</codeblock></stepxmp>
      </step>
      <step>
        <cmd>Start <cmdname>serviced</cmdname>.</cmd>
        <choices>
          <choice>Ubuntu: <userinput>sudo start serviced</userinput></choice>
          <choice>RHEL/CentOS: <userinput>systemctl start serviced</userinput></choice>
        </choices>
      </step>
      <step>
        <cmd>Synchronize the local Docker registry with the resource pool hosts.</cmd>
        <choices>
          <choice>Ubuntu: <userinput>sudo serviced docker sync</userinput></choice>
          <choice>RHEL/CentOS: <userinput>serviced docker sync</userinput></choice>
        </choices>
      </step>
      <step>
        <cmd>In the <ph keyref="nm-cc"/> web interface,
        start applications.</cmd>
      </step>
    </steps>
  </taskbody>
</task>

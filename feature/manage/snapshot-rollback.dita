<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "urn:pubid:zenoss.com:doctypes:dita:dtd:reference" "reference.dtd">
<reference id="referenceid">
  <title>Snapshot and rollback</title>
  <shortdesc>Though backups are the most reliable and durable way to preserve Docker images and
    configurations, creating a backup of an entire application is not always practical. However, you
    need to safeguard against potential risk when changing the system. In these cases, you can
    create a snapshot of the system.</shortdesc>
  <refbody>
    <section>
        <p>Snapshot functionality provides a time- and space-efficient method of copying data.
        Create a snapshot whenever you need a save point for Docker images, such as before
        committing container changes. </p>
      <p>With both snapshot and backup, <ph keyref="nm-cc"/>
        <ul>
          <li>Creates a tag for the Docker image of each service with metadata about the application
            data.</li>
          <li>Creates a separate snapshot of the LVM thin pool, which stores both application data
            and snapshots of the application data.</li>
        </ul>
      </p>
    <p>Snapshots are intended to serve as short-term save points only, and therefore have a default
        time-to-live (TTL) value of 12 hours. If you need to keep a snapshot beyond the TTL, tag the
        snapshot to prevent it from being deleted after the TTL expires. For historical backups of
        data that you need to save long-term, create full backups instead of snapshots. </p>
    <p>You can use the rollback functionality to go back to a snapshot image. For example, roll back
      if changes to an application cause a failure or other degradation. Rolling back returns the
      application and distributed file system to the state that existed at the time of the snapshot. </p>
    <!--CC_695-->
    <note>Rolling back from a snapshot does not remove services that you added after creating the
        snapshot. That is, if you create a snapshot, add a service, and then roll back, the service
        remains on the system; it is not deleted as part of the roll back.</note>
    <p><ph keyref="nm-cc"/> uses <i>thin provisioning</i>, which enables it to create snapshots of
        the application data volume. Thin provisioning is a virtualization method that allocates
        data blocks only when data is written (copy-on-write). </p>
   <p>Because snapshots track changes to the file system over time, their space requirements
      expand incrementally as application data changes. Application data and snapshots share the
      same base device; therefore, ensure that snapshots do not fill up the base device storage. For
      information about extending storage, see <xref keyref="cc-feature-manage-resize"/>.</p>
    </section>
  </refbody>
</reference>

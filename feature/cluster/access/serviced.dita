<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "urn:pubid:zenoss.com:doctypes:dita:dtd:task" "task.dtd">
<task id="taskid">
  <title>Configuring a regular group as the <ph keyref="nm-cc"/> administrative group</title>
  <taskbody>
    <context>Use this procedure to change the default administrative group of <ph keyref="nm-cc"/>
      from <codeph>wheel</codeph> to a non-system group. <note>Perform this procedure or the
        previous procedure, but not both.</note>
    </context>
    <steps>
      <step>
        <cmd>Log in to the host <ph conkeyref="strings/login-root"/>.</cmd>
      </step>
      
      <step>
        <cmd>Create a variable for the group to designate as the administrative group.</cmd>
        <info>In this example, the name of group to create is <codeph>serviced</codeph>. You may
          choose any name or use an existing group.</info>
        <stepxmp>
          <codeblock>GROUP=serviced</codeblock>
        </stepxmp>
      </step>
      
      <step>
        <cmd importance="optional">Create a new group, if necessary.</cmd>
        <stepxmp>
          <codeblock>groupadd $GROUP</codeblock>
        </stepxmp>
      </step>
      
      <step>
        <cmd>Add one or more existing users to the new administrative group.</cmd>
        <stepxmp>
          <p>Replace <varname>User</varname> with the name of a login account on the host:</p>
          <codeblock>usermod -aG $GROUP <varname>User</varname></codeblock>
        </stepxmp>
        <info>Repeat the preceding command for each user to add.</info>
      </step>
      
      <step>
        <cmd>Specify the new administrative group in the 
          <cmdname>serviced</cmdname> configuration file.</cmd>
        <info>The following variable specifies the administrative group:
          <dl>
            <dlentry conkeyref="feature-lib-vars/SERVICED_ADMIN_GROUP">
              <dt/>
              <dd/>
            </dlentry>
          </dl>
        </info>
        <substeps>
          <substep conkeyref="feature-lib-tasks/open-file">
            <cmd/>
          </substep>
          <substep>
            <cmd>Find the <varname>SERVICED_ADMIN_GROUP</varname> declaration, and then change the
              value from <codeph>wheel</codeph> to the name of the group you chose earlier.</cmd>
            <stepxmp>The following example shows the line to change:
              <codeblock># SERVICED_ADMIN_GROUP=wheel</codeblock></stepxmp>
          </substep>
          <substep conkeyref="feature-lib-tasks/uncomment">
            <cmd/>
          </substep>
          <substep conkeyref="feature-lib-tasks/save">
            <cmd/>
          </substep>
        </substeps>
      </step>
            
      <step importance="optional">
        <cmd>Prevent the <codeph>root</codeph> user from gaining access to the <ph keyref="nm-cc"/>
          browser interface, if desired.</cmd>
        <info>The following variable controls the <codeph>root</codeph> login privilege: <dl>
            <dlentry conkeyref="feature-lib-vars/SERVICED_ALLOW_ROOT_LOGIN">
              <dt/>
              <dd/>
            </dlentry>
          </dl>
        </info>
        <substeps>
          <substep conkeyref="feature-lib-tasks/open-file">
            <cmd/>
          </substep>
          <substep>
            <cmd>Find the <varname>SERVICED_ALLOW_ROOT_LOGIN</varname> declaration, and then change
              the value from <codeph>1</codeph> to <codeph>0</codeph>.</cmd>
            <stepxmp>The following example shows the line to change:
              <codeblock># SERVICED_ALLOW_ROOT_LOGIN=1</codeblock></stepxmp>
          </substep>
          <substep conkeyref="feature-lib-tasks/uncomment">
            <cmd/>
          </substep>
          <substep conkeyref="feature-lib-tasks/save">
            <cmd/>
          </substep>
        </substeps>
      </step>

    </steps>
  </taskbody>
</task>

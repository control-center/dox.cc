<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "urn:pubid:zenoss.com:doctypes:dita:dtd:task" "task.dtd">
<task id="taskid">
  <title>Installing Docker and <ph keyref="nm-cc"/></title>
  <taskbody>
    <context>This procedure installs and configures Docker, 
      and installs <ph keyref="nm-cc"/>.</context>
    <context>Perform this procedure on the primary node and on the secondary node.</context>
    <steps>
      
      <step>
        <cmd>Log in to the host <ph conkeyref="strings/login-root"/>.</cmd>
      </step>

      <step conkeyref="feature-lib-tasks/docker-install">
        <cmd/>
      </step>
      
      <step conkeyref="feature-lib-tasks/docker-tmp">
        <cmd/>
      </step>
      
      <step conkeyref="feature-lib-tasks/docker-svc-def">
        <cmd/>
      </step>

      <step conkeyref="feature-lib-tasks/install-serviced">
        <cmd></cmd>
      </step>
      
      <step>
        <cmd>Disable automatic startup of
          <ph keyref="nm-cc"/> by <cmdname>systemd</cmdname>.</cmd>
        <info>The cluster management software controls the Docker service.</info>
        <stepxmp>
          <codeblock>systemctl disable serviced</codeblock>
        </stepxmp>
      </step>

      <step>
        <cmd>Create a device mapper thin pool for Docker data.</cmd>
        <stepxmp>
          <p>Replace <varname>Docker-Partition</varname> with the 
            path of the primary partition designated for Docker data:</p>
          <codeblock>serviced-storage create-thin-pool docker <varname>Docker-Partition</varname></codeblock>
        </stepxmp>
        <stepresult>On success, the result includes the name of the thin pool,
          which always starts with <codeph>/dev/mapper</codeph>.</stepresult>
      </step>

      <step conkeyref="feature-lib-tasks/docker-config">
        <cmd/>
      </step>
      
      <step conkeyref="feature-lib-tasks/docker-hub">
        <cmd></cmd>
      </step>

      <step conkeyref="feature-lib-tasks/docker-dns-flag">
        <cmd/>
      </step>
      
      <step>
        <cmd>Pull the required <ph keyref="nm-cc"/> images from Docker Hub, and then stop and
          disable the Docker service.</cmd>
        <substeps>
          <substep>
            <cmd>Identify the images to pull.</cmd>
            <stepxmp>
              <codeblock>serviced version | grep IsvcsImages</codeblock>
            </stepxmp>
            <stepresult>Example result:
              <codeblock>IsvcsImages: [zenoss/serviced-isvcs:v40 zenoss/isvcs-zookeeper:v3]</codeblock>
            </stepresult>
          </substep>
          <substep>
            <cmd>Pull <ph keyref="nm-cc"/> images.</cmd>
            <stepxmp>
              <p>Replace <varname>Isvcs-Image-Name</varname> with one of the images
              named in the output of the previous substep:</p>
              <codeblock>docker pull <varname>Isvcs-Image-Name</varname></codeblock>
              <p>Repeat the command for each required image.</p>
            </stepxmp>
          </substep>
          <substep>
            <cmd>Stop and disable the Docker service.</cmd>
            <info>The cluster management software controls the Docker service.</info>
            <stepxmp>
              <codeblock>systemctl stop docker &#38;&#38; systemctl disable docker</codeblock>
            </stepxmp>
          </substep>
        </substeps>
      </step>
    </steps>
  </taskbody>
</task>
